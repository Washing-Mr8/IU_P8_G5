{"ast":null,"code":"import * as M from './model.js';\nimport VmGrid from './components/VmGrid.vue';\nimport FilterAddBox from './components/FilterAddBox.vue';\nimport VmAddOrEditModal from './components/VmAddOrEditModal.vue';\nimport GroupAddOrEditModal from './components/GroupAddOrEditModal.vue';\nimport DetailsPane from './components/DetailsPane.vue';\nimport { ref, onMounted, nextTick } from 'vue';\nimport * as bootstrap from 'bootstrap';\n\n// inicializa modelo (si esto fuese de verdad, habría un login previo)\nconst debug = false;\nexport default {\n  __name: 'App',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    M.init();\n    // trampas: da acceso al modelo desde la consola\n    window.M = M;\n\n    // las partes que nos interesan\n    const vms = ref(M.getVms());\n    const groups = ref(M.getGroups());\n    const selected = ref({\n      id: -1\n    });\n\n    // tooltips\n    onMounted(() => {\n      // see https://getbootstrap.com/docs/5.3/components/tooltips/#overview\n      [...document.querySelectorAll('[data-bs-toggle=\"tooltip\"]')].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));\n    });\n\n    // recarga vistas\n    function refresh() {\n      vms.value = M.getVms();\n      groups.value = M.getGroups();\n      if (selected.value.id != -1) {\n        selected.value = M.resolve(selected.value.id);\n      }\n    }\n\n    /////\n    // Vms\n    /////\n\n    // modal para añadir/editar vms\n    let vmModalRef = ref(null);\n    const defaultNewVm = new M.Vm(-1, 'nueva máquina', 4, 100, 50, 1, \"0.0.0.0\", 100, 100, -1, M.VmState.STOPPED, 100, 100, []);\n    let vmToAddOrEdit = ref(defaultNewVm);\n\n    // empieza a editar una Vm; pasa -1 para crear una nueva\n    async function edVm(id) {\n      console.log(\"now editing\", id);\n      vmToAddOrEdit.value = id == -1 ? vmToAddOrEdit.value = defaultNewVm : vmToAddOrEdit.value = M.resolve(id);\n      // da tiempo a Vue para que prepare el componente antes de mostrarlo\n      await nextTick();\n      vmModalRef.value.show();\n    }\n    function rmVm(id) {\n      M.rmVm(id);\n      if (selected.value.id == id) {\n        selected.value = {\n          id: -1\n        };\n      }\n      refresh();\n    }\n    function setState(id, state) {\n      const vm = M.resolve(id);\n      vm.state = state;\n      M.setVm(vm);\n      refresh();\n    }\n\n    /////\n    // Grupos\n    /////\n\n    // modal para añadir/editar grupos\n    let groupModalRef = ref(null);\n    const defaultNewGroup = new M.Group(-1, 'nuevo grupo', []);\n    let groupToAddOrEdit = ref(defaultNewGroup);\n\n    // empieza a editar un grupo; pasa -1 para crear uno nuevo\n    async function edGroup(id) {\n      console.log(\"now editing\", id);\n      groupToAddOrEdit.value = id == -1 ? groupToAddOrEdit.value = defaultNewGroup : groupToAddOrEdit.value = M.resolve(id);\n      // da tiempo a Vue para que prepare el componente antes de mostrarlo\n      await nextTick();\n      groupModalRef.value.show();\n    }\n    function rmGroup(id) {\n      M.rmGroup(id);\n      if (selected.value.id == id) {\n        selected.value = {\n          id: -1\n        };\n      }\n      refresh();\n    }\n\n    /////\n    // Búsqueda y Filtrado\n    /////\n\n    const searchGroupQuery = ref({\n      all: '',\n      fields: []\n    });\n    const searchVmQuery = ref({\n      all: '',\n      fields: []\n    });\n    const vmFilterGroup = ref(null);\n    const groupFilterVm = ref(null);\n\n    // muestra sólo vms de ese grupo (o todas con -1)\n    const switchVms = groupId => {\n      console.log('vms for group ', groupId);\n      vms.value = groupId == -1 ? M.getVms() : M.resolve(groupId).members.map(vmId => M.resolve(vmId));\n      vmFilterGroup.value = groupId == -1 ? null : M.resolve(groupId);\n    };\n\n    // muestra sólo grupos con esa vm (o todos con -1)\n    const switchGroups = vmId => {\n      console.log('groups for vm ', vmId);\n      groups.value = vmId == -1 ? M.getGroups() : M.resolve(vmId).groups.map(groupId => M.resolve(groupId));\n      groupFilterVm.value = vmId == -1 ? null : M.resolve(vmId);\n    };\n    const __returned__ = {\n      vms,\n      groups,\n      selected,\n      refresh,\n      get vmModalRef() {\n        return vmModalRef;\n      },\n      set vmModalRef(v) {\n        vmModalRef = v;\n      },\n      defaultNewVm,\n      get vmToAddOrEdit() {\n        return vmToAddOrEdit;\n      },\n      set vmToAddOrEdit(v) {\n        vmToAddOrEdit = v;\n      },\n      edVm,\n      rmVm,\n      setState,\n      get groupModalRef() {\n        return groupModalRef;\n      },\n      set groupModalRef(v) {\n        groupModalRef = v;\n      },\n      defaultNewGroup,\n      get groupToAddOrEdit() {\n        return groupToAddOrEdit;\n      },\n      set groupToAddOrEdit(v) {\n        groupToAddOrEdit = v;\n      },\n      edGroup,\n      rmGroup,\n      searchGroupQuery,\n      searchVmQuery,\n      debug,\n      vmFilterGroup,\n      groupFilterVm,\n      switchVms,\n      switchGroups,\n      get M() {\n        return M;\n      },\n      VmGrid,\n      FilterAddBox,\n      VmAddOrEditModal,\n      GroupAddOrEditModal,\n      DetailsPane,\n      ref,\n      onMounted,\n      nextTick,\n      get bootstrap() {\n        return bootstrap;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["M","VmGrid","FilterAddBox","VmAddOrEditModal","GroupAddOrEditModal","DetailsPane","ref","onMounted","nextTick","bootstrap","debug","init","window","vms","getVms","groups","getGroups","selected","id","document","querySelectorAll","map","tooltipTriggerEl","Tooltip","refresh","value","resolve","vmModalRef","defaultNewVm","Vm","VmState","STOPPED","vmToAddOrEdit","edVm","console","log","show","rmVm","setState","state","vm","setVm","groupModalRef","defaultNewGroup","Group","groupToAddOrEdit","edGroup","rmGroup","searchGroupQuery","all","fields","searchVmQuery","vmFilterGroup","groupFilterVm","switchVms","groupId","members","vmId","switchGroups"],"sources":["C:/hlocal/IU_P8_G5/IU_P8_G5/iu2324/vmanager/src/App.vue"],"sourcesContent":["<script setup>\r\nimport * as M from './model.js'\r\n\r\nimport VmGrid from './components/VmGrid.vue'\r\nimport FilterAddBox from './components/FilterAddBox.vue'\r\nimport VmAddOrEditModal from './components/VmAddOrEditModal.vue'\r\nimport GroupAddOrEditModal from './components/GroupAddOrEditModal.vue'\r\nimport DetailsPane from './components/DetailsPane.vue'\r\n\r\nimport { ref, onMounted, nextTick } from 'vue'\r\nimport * as bootstrap from 'bootstrap'\r\n\r\n// inicializa modelo (si esto fuese de verdad, habría un login previo)\r\nM.init();\r\n// trampas: da acceso al modelo desde la consola\r\nwindow.M = M\r\n\r\n// las partes que nos interesan\r\nconst vms = ref(M.getVms());\r\nconst groups = ref(M.getGroups());\r\nconst selected = ref({id: -1});\r\n\r\n// tooltips\r\nonMounted(() => {\r\n  // see https://getbootstrap.com/docs/5.3/components/tooltips/#overview\r\n  [...document.querySelectorAll('[data-bs-toggle=\"tooltip\"]')]\r\n    .map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))\r\n})\r\n\r\n// recarga vistas\r\nfunction refresh() {\r\n  vms.value = M.getVms();\r\n  groups.value = M.getGroups();\r\n  if (selected.value.id != -1) {\r\n    selected.value = M.resolve(selected.value.id);\r\n  }\r\n}\r\n\r\n/////\r\n// Vms\r\n/////\r\n\r\n// modal para añadir/editar vms\r\nlet vmModalRef = ref(null);\r\nconst defaultNewVm = new M.Vm(-1, 'nueva máquina', 4, 100, 50, 1,\r\n        \"0.0.0.0\", 100, 100, -1, M.VmState.STOPPED, 100, 100, []);\r\nlet vmToAddOrEdit = ref(defaultNewVm);\r\n\r\n\r\n// empieza a editar una Vm; pasa -1 para crear una nueva\r\nasync function edVm(id) {\r\n  console.log(\"now editing\", id)\r\n  vmToAddOrEdit.value = (id == -1) ?\r\n    vmToAddOrEdit.value = defaultNewVm :\r\n    vmToAddOrEdit.value = M.resolve(id);\r\n  // da tiempo a Vue para que prepare el componente antes de mostrarlo\r\n  await nextTick()\r\n  vmModalRef.value.show()\r\n}\r\n\r\nfunction rmVm(id) {\r\n  M.rmVm(id);\r\n  if (selected.value.id == id) {\r\n    selected.value = {id: -1};\r\n  }\r\n  refresh();\r\n}\r\n\r\nfunction setState(id, state) {\r\n  const vm = M.resolve(id);\r\n  vm.state = state;\r\n  M.setVm(vm);\r\n  refresh();\r\n}\r\n\r\n/////\r\n// Grupos\r\n/////\r\n\r\n// modal para añadir/editar grupos\r\nlet groupModalRef = ref(null);\r\nconst defaultNewGroup = new M.Group(-1, 'nuevo grupo', []);\r\nlet groupToAddOrEdit = ref(defaultNewGroup);\r\n\r\n// empieza a editar un grupo; pasa -1 para crear uno nuevo\r\nasync function edGroup(id) {\r\n  console.log(\"now editing\", id)\r\n  groupToAddOrEdit.value = (id == -1) ?\r\n    groupToAddOrEdit.value = defaultNewGroup :\r\n    groupToAddOrEdit.value = M.resolve(id);\r\n  // da tiempo a Vue para que prepare el componente antes de mostrarlo\r\n  await nextTick()\r\n  groupModalRef.value.show()\r\n}\r\n\r\nfunction rmGroup(id) {\r\n  M.rmGroup(id);\r\n  if (selected.value.id == id) {\r\n    selected.value = {id: -1};\r\n  }\r\n  refresh();\r\n}\r\n\r\n/////\r\n// Búsqueda y Filtrado\r\n/////\r\n\r\nconst searchGroupQuery = ref({all: '', fields: []})\r\nconst searchVmQuery = ref({all: '', fields: []})\r\nconst debug = false;\r\n\r\nconst vmFilterGroup = ref(null)\r\nconst groupFilterVm = ref(null)\r\n\r\n// muestra sólo vms de ese grupo (o todas con -1)\r\nconst switchVms = (groupId) => {\r\n  console.log('vms for group ', groupId);\r\n  vms.value = (groupId == -1) ? \r\n    M.getVms() :\r\n    M.resolve(groupId).members.map(vmId => M.resolve(vmId))\r\n  vmFilterGroup.value = (groupId == -1) ? \r\n    null :\r\n    M.resolve(groupId)    \r\n}\r\n\r\n// muestra sólo grupos con esa vm (o todos con -1)\r\nconst switchGroups = (vmId) => {\r\n  console.log('groups for vm ', vmId);\r\n  groups.value = (vmId == -1) ? \r\n    M.getGroups() :\r\n    M.resolve(vmId).groups.map(groupId => M.resolve(groupId))\r\n  groupFilterVm.value = (vmId == -1) ? \r\n    null :\r\n    M.resolve(vmId)        \r\n}\r\n\r\n</script>\r\n\r\n<template>\r\n  <!-- Navbar principal -->\r\n  <nav class=\"navbar navbar-expand-lg\">\r\n    <div class=\"container-fluid\">\r\n      <a class=\"navbar-brand\" href=\"#\">VManager</a>\r\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link active\" aria-current=\"page\" href=\"#div-groups\" title=\"Ir a la sección de Grupos\">Grupos</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link active\" aria-current=\"page\" href=\"#div-vms\" title=\"Ir a la sección de Máquinas Virtuales\">Vms</a>\r\n        </li>\r\n        </ul>        \r\n          <div class=\"nav-item ms-auto\">\r\n            <div class=\"btn-group\">\r\n              <button id=\"save\" class=\"btn btn-outline-secondary\" title=\"Guardar\">💾</button>\r\n              <button id=\"clean\" class=\"btn btn-outline-secondary\" title=\"Limpiar\">🧽</button>\r\n              <button id=\"restore\" class=\"btn btn-outline-secondary\" title=\"Restaurar\">↩️</button>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n\r\n  <!-- \r\n    Div principal; container-fluid expande el contenedor para que ocupe todo el espacio disponible \r\n  -->\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <!-- 1a columna: grupos -->\r\n      <div id=\"div-groups\" class=\"col-md\">\r\n        <div>\r\n          <h5 class=\"d-inline\">Grupos\r\n            <span v-if=\"groupFilterVm\" class=\"filter\"\r\n              @click=\"switchGroups(-1)\">\r\n              que contienen a \r\n              <span class=\"name\">{{ groupFilterVm.name }}×</span>\r\n            </span>            \r\n          </h5>\r\n          <a class=\"d-inline d-sm-none details\" href=\"#div-details\">↘️</a>\r\n        </div>        \r\n        <span v-if=\"debug\"> {{ searchGroupQuery }}</span>        \r\n        <FilterAddBox \r\n          v-model=\"searchGroupQuery\" \r\n          :cols=\"['name', 'members']\"\r\n          @add-element=\"edGroup(-1)\"\r\n          addBtnTitle=\"Añadir nuevo grupo\"/>          \r\n        <div class=\"overflow-y-scroll vh-100\">\r\n            <VmGrid :data=\"groups\" :columns=\"['name', 'members']\" :filter-key=\"searchGroupQuery.all\"\r\n            @choose=\"(e) => { console.log('selected vm', e); selected = M.resolve(e) }\">\r\n            </VmGrid>\r\n        </div>\r\n      </div>\r\n      <!-- 2a columna: vms -->\r\n      <div id=\"div-vms\" class=\"col-md\">\r\n        <div>\r\n          <a class=\"d-inline d-sm-none escape\" href=\"#\">⬆️</a>\r\n          <h5 class=\"d-inline\">Máquinas Virtuales \r\n            <span v-if=\"vmFilterGroup\" class=\"filter\"\r\n              @click=\"switchVms(-1)\">\r\n              dentro de\r\n              <span class=\"name\">{{ vmFilterGroup.name }}×</span>\r\n            </span>            \r\n          </h5>\r\n          <a class=\"d-inline d-sm-none details\" href=\"#div-details\">↘️</a>\r\n        </div>           \r\n        <span v-if=\"debug\"> {{ searchVmQuery }}</span>\r\n        <FilterAddBox \r\n          v-model=\"searchVmQuery\" \r\n          :cols=\"['name', 'ram', 'hd', 'ip']\"\r\n          @add-element=\"edVm(-1)\"\r\n          addBtnTitle=\"Añadir nueva VM\"/>\r\n        <div class=\"overflow-y-scroll vh-100\">\r\n          <VmGrid :data=\"vms\" :columns=\"['name', 'ram', 'groups', 'state']\" :filter-key=\"searchVmQuery.all\"\r\n          @choose=\"(e) => { console.log('selected group', e); selected = M.resolve(e) }\">\r\n          </VmGrid>\r\n      </div>\r\n      </div>\r\n      <!-- 3a zona: detalles vms actuales -->\r\n      <div id=\"div-details\" class=\"col-md\">\r\n        <div>\r\n          <a class=\"d-inline d-sm-none escape\" href=\"#\">⬆️</a>\r\n          <h5 class=\"d-inline\">Detalles</h5>\r\n        </div>   \r\n        <div id=\"details\" class=\"container\">\r\n          <DetailsPane \r\n            :element=\"selected\"\r\n            @editVm=\"edVm(selected.id)\"\r\n            @filterVm=\"switchGroups(selected.id)\"\r\n            @rmVm=\"rmVm(selected.id)\"\r\n            @editGroup=\"edGroup(selected.id)\"\r\n            @filterGroup=\"switchVms(selected.id)\"\r\n            @rmGroup=\"rmGroup(selected.id)\"\r\n            @setState=\"state=>setState(selected.id, state)\"\r\n          ></DetailsPane>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- \r\n    Modal para crear/editar grupo\r\n    siempre usamos el mismo, y no se muestra hasta que hace falta\r\n  -->\r\n  <GroupAddOrEditModal ref=\"groupModalRef\" \r\n    :key=\"groupToAddOrEdit.id\"\r\n    :group=\"groupToAddOrEdit\" :isAdd=\"groupToAddOrEdit.id == -1\"\r\n    @add=\"(g) => { console.log('adding', g); M.addGroup(g); refresh() }\"\r\n    @edit=\"(g) => { console.log('setting', g); M.setGroup(g); refresh() }\"\r\n    />\r\n\r\n  <!-- \r\n    Modal para crear/editar VM\r\n    siempre usamos el mismo, y no se muestra hasta que hace falta\r\n  -->\r\n  <VmAddOrEditModal ref=\"vmModalRef\"\r\n    :key=\"vmToAddOrEdit.id\"\r\n    :vm=\"vmToAddOrEdit\" :isAdd=\"vmToAddOrEdit.id == -1\"\r\n    @add=\"(vm) => { console.log('adding', vm); M.addVm(vm); refresh() }\"\r\n    @edit=\"(vm) => { console.log('setting', vm); M.setVm(vm); refresh() }\"\r\n    />\r\n</template>\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  color: #2c3e50;\r\n}\r\n.escape {\r\n  font-size: 150%;\r\n  padding-right: 1em;\r\n}\r\n.details {\r\n  font-size: 150%;\r\n  padding-left: 1em;\r\n}\r\nspan.filter>.name {\r\n  font-weight: 1000;\r\n}\r\nspan.filter {\r\n  border-bottom: 2px dashed gray;\r\n}\r\nspan.filter:hover {\r\n  border-bottom: 2px dashed blue;\r\n}\r\n\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}