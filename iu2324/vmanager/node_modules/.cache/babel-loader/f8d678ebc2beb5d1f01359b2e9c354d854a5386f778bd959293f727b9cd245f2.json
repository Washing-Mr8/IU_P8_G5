{"ast":null,"code":"import { resolve, VmState, turnOnAll, turnOffAll } from '../model.js';\nconst __default__ = {\n  methods: {\n    confirmDeleteVm() {\n      const confirmed = window.confirm('¬øEst√°s seguro de que deseas eliminar esta m√°quina?');\n      if (confirmed) {\n        // Emitir el evento para eliminar el grupo\n        this.$emit('rmVM');\n      }\n    },\n    confirmDeleteG() {\n      const confirmed = window.confirm('¬øEst√°s seguro de que deseas eliminar este Grupo?');\n      if (confirmed) {\n        // Emitir el evento para eliminar el grupo\n        this.$emit('rmGroup');\n      }\n    },\n    turnOnAllMachines() {\n      turnOnAll(this.element.id);\n      this.$forceUpdate(); //Asi no se hace, pero funciona\n    },\n\n    turnOffAllMachines() {\n      turnOffAll(this.element.id);\n      this.$forceUpdate(); //Asi no se hace, pero funciona\n    }\n  }\n};\n\nexport default /*#__PURE__*/Object.assign(__default__, {\n  __name: 'DetailsPane',\n  props: {\n    element: Object\n  },\n  emits: ['editVm', 'filterVm', 'rmVm', 'editGroup', 'filterGroup', 'rmGroup', 'setState'],\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const props = __props;\n    function list(state) {\n      return props.element.members.map(v => resolve(v)).filter(vm => state ? vm.state == state : true).map(o => o.name).join(' ');\n    }\n    const __returned__ = {\n      props,\n      list,\n      get resolve() {\n        return resolve;\n      },\n      get VmState() {\n        return VmState;\n      },\n      get turnOnAll() {\n        return turnOnAll;\n      },\n      get turnOffAll() {\n        return turnOffAll;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n});","map":{"version":3,"names":["resolve","VmState","turnOnAll","turnOffAll","__default__","methods","confirmDeleteVm","confirmed","window","confirm","$emit","confirmDeleteG","turnOnAllMachines","element","id","$forceUpdate","turnOffAllMachines","props","__props","list","state","members","map","v","filter","vm","o","name","join"],"sources":["C:/hlocal/IU_P8_G5/IU_P8_G5/iu2324/vmanager/src/components/DetailsPane.vue"],"sourcesContent":["<script setup>\r\nimport { resolve, VmState, turnOnAll, turnOffAll } from '../model.js'\r\n\r\ndefineEmits(['editVm', 'filterVm', 'rmVm', 'editGroup', 'filterGroup', 'rmGroup', 'setState'])\r\n\r\nconst props = defineProps({\r\n  element: Object\r\n})\r\n\r\nfunction list(state) {\r\n  return props.element.members\r\n    .map(v=>resolve(v))\r\n    .filter(vm=>state ? vm.state == state : true)\r\n    .map(o=>o.name).join(' ');\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div v-if=\"element == null || element.id == -1\">\r\n    (selecciona una Vm o un grupo para ver sus detalles)\r\n  </div>\r\n  <div v-else-if=\"Array.isArray(element.groups)\">\r\n    <h4>m√°quina virtual <span class=\"name\">{{element.name}}</span></h4>\r\n\r\n    <table>\r\n      <tr>\r\n        <th>Estado</th>\r\n        <td>{{ element.state }} </td>\r\n      </tr>\r\n      <tr>\r\n        <th>Memoria</th>\r\n        <td>{{ element.ram }} Gb</td>\r\n      </tr>\r\n      <tr>\r\n        <th>Disco</th>\r\n        <td>{{ element.hd }} Gb</td>\r\n      </tr>\r\n      <tr>\r\n        <th>M√°ximo uso de CPU</th>\r\n        <td>{{ element.cpu }} %</td>\r\n      </tr>\r\n      <tr>\r\n        <th>N√∫cleos de CPU</th>\r\n        <td>{{ element.cores }}</td>\r\n      </tr>\r\n      <tr>\r\n        <th>Direcci√≥n IPv4</th>\r\n        <td>{{ element.ip }}</td>\r\n      </tr>\r\n      <tr>\r\n        <th>Ancho de banda m√°ximo</th>\r\n        <td>{{ element.up }} Kbps de subida<br>{{ element.down }} Kbps de bajada</td>\r\n      </tr>\r\n      <tr>\r\n        <th>Disco externo virtual</th>\r\n        <td v-if=\"element.iso != -1\">{{ resolve(element.iso).name }}</td>\r\n        <td v-else> (ninguno) </td>\r\n      </tr>\r\n      <tr>\r\n        <th>Grupos a los que pertenece</th>\r\n        <td v-if=\"element.groups.length\">\r\n          {{ element.groups.map(g => resolve(g).name).join(' ') }}\r\n        </td>\r\n        <td v-else> (ninguno) </td>\r\n      </tr>\r\n    </table>\r\n  \r\n    <h5>Acciones</h5>\r\n<div class=\"btn-group\">\r\n  <button @click=\"$emit('editVm')\" class=\"btn btn-outline-success\" title=\"Editar M√°quina Virtual\" :disabled=\"element.state === VmState.RUNNING  || element.state === VmState.SUSPENDED\">‚úèÔ∏è</button>\r\n  <button v-if=\"element.groups.length\" class=\"btn btn-outline-warning\" @click=\"$emit('filterVm')\" title=\"Filtrar M√°quina Virtual\">üî¨</button>\r\n  <button v-if=\"element.state !== VmState.RUNNING\" class=\"btn btn-outline-secondary\" @click=\"$emit('setState', VmState.RUNNING)\" title=\"Iniciar M√°quina Virtual\">‚ñ∂</button>\r\n  <button v-if=\"element.state !== VmState.SUSPENDED\" class=\"btn btn-outline-secondary\" @click=\"$emit('setState', VmState.SUSPENDED)\" title=\"Suspender M√°quina Virtual\">üí§</button>\r\n  <button v-if=\"element.state !== VmState.STOPPED\" class=\"btn btn-outline-secondary\" @click=\"$emit('setState', VmState.STOPPED)\" title=\"Detener M√°quina Virtual\">üõë</button>\r\n  <button @click=\"confirmDeleteVm\" class=\"btn btn-outline-danger\" title=\"Eliminar M√°quina Virtual\">üóëÔ∏è</button>\r\n</div>\r\n\r\n\r\n\r\n    </div>\r\n\r\n  <div v-else>\r\n    <h4>grupo <span class=\"name\">{{element.name}}</span></h4>\r\n\r\n    <b>{{ element.members.length }} integrantes</b>\r\n    <table>\r\n      <tr>\r\n        <th>{{ element.members.length }} integrantes</th>\r\n        <td v-if=\"element.members.length\">{{ list(false) }}\r\n        </td>\r\n        <td v-else> (no hay) </td>\r\n      </tr>\r\n      <tr>\r\n        <th>Encendidas</th>\r\n        <td v-if=\"list(VmState.RUNNING).length\"  style=\"color: green\">{{ list(VmState.RUNNING) }} </td>\r\n        <td v-else> (no hay) </td>\r\n      </tr>  \r\n      <tr>\r\n        <th>Suspendidas</th>\r\n        <td v-if=\"list(VmState.SUSPENDED).length\"  >{{ list(VmState.SUSPENDED) }}</td>\r\n        <td v-else> (no hay) </td>\r\n      </tr>\r\n      <tr>\r\n        <th>Apagadas</th>\r\n        <td v-if=\"list(VmState.STOPPED).length\">{{ list(VmState.STOPPED) }}</td>\r\n        <td v-else> (no hay) </td>\r\n      </tr>\r\n    </table>\r\n\r\n    <h5>Acciones</h5>\r\n    <div class=\"btn-group\">\r\n      <button @click=\"$emit('editGroup')\" class=\"btn btn-outline-success\" title=\"Editar Grupo\">‚úèÔ∏è</button>\r\n      <button @click=\"$emit('filterGroup')\" class=\"btn btn-outline-warning\" title=\"Filtrar Grupo\">üî¨</button>\r\n      <button @click=\"confirmDeleteG\" class=\"btn btn-outline-danger\" title=\"Eliminar Grupo\">üóëÔ∏è</button>\r\n      <button @click=\"turnOnAllMachines\" class=\"btn btn-outline-success\" title=\"Encender todas las maquinas del grupo\">‚ñ∂</button>\r\n      <button @click=\"turnOffAllMachines\" class=\"btn btn-outline-danger\" title=\"Apagar todas las maquinas del grupo\">üõë</button>\r\n      \r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  methods: {\r\n    confirmDeleteVm() {\r\n      const confirmed = window.confirm('¬øEst√°s seguro de que deseas eliminar esta m√°quina?');\r\n\r\n      if (confirmed) {\r\n        // Emitir el evento para eliminar el grupo\r\n        this.$emit('rmVM');\r\n      }\r\n    },\r\n    confirmDeleteG() {\r\n      const confirmed = window.confirm('¬øEst√°s seguro de que deseas eliminar este Grupo?');\r\n\r\n      if (confirmed) {\r\n        // Emitir el evento para eliminar el grupo\r\n        this.$emit('rmGroup');\r\n      }\r\n    },\r\n    turnOnAllMachines(){\r\n\r\n      turnOnAll(this.element.id);\r\n      this.$forceUpdate(); //Asi no se hace, pero funciona\r\n\r\n    },\r\n  \r\n    turnOffAllMachines(){\r\n\r\n      turnOffAll(this.element.id);\r\n      this.$forceUpdate(); //Asi no se hace, pero funciona\r\n\r\n    }\r\n  }\r\n  \r\n};\r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\n  tr>th {\r\n    width: 10em;\r\n    text-align: right;\r\n  }\r\n  .name {\r\n    font-weight: 1000;\r\n  }\r\n  td, th {\r\n    padding: 4px;\r\n  }\r\n  h5 {\r\n    margin-top: 1em;\r\n  }\r\n\r\n</style>\r\n"],"mappings":"AACA,SAASA,OAAO,EAAEC,OAAO,EAAEC,SAAS,EAAEC,UAAU,QAAQ,aAAa;AAyHrE,MAAAC,WAAA,GAAe;EACbC,OAAO,EAAE;IACPC,eAAeA,CAAA,EAAG;MAChB,MAAMC,SAAS,GAAGC,MAAM,CAACC,OAAO,CAAC,oDAAoD,CAAC;MAEtF,IAAIF,SAAS,EAAE;QACb;QACA,IAAI,CAACG,KAAK,CAAC,MAAM,CAAC;MACpB;IACF,CAAC;IACDC,cAAcA,CAAA,EAAG;MACf,MAAMJ,SAAS,GAAGC,MAAM,CAACC,OAAO,CAAC,kDAAkD,CAAC;MAEpF,IAAIF,SAAS,EAAE;QACb;QACA,IAAI,CAACG,KAAK,CAAC,SAAS,CAAC;MACvB;IACF,CAAC;IACDE,iBAAiBA,CAAA,EAAE;MAEjBV,SAAS,CAAC,IAAI,CAACW,OAAO,CAACC,EAAE,CAAC;MAC1B,IAAI,CAACC,YAAY,CAAC,CAAC,CAAC,CAAC;IAEvB,CAAC;;IAEDC,kBAAkBA,CAAA,EAAE;MAElBb,UAAU,CAAC,IAAI,CAACU,OAAO,CAACC,EAAE,CAAC;MAC3B,IAAI,CAACC,YAAY,CAAC,CAAC,CAAC,CAAC;IAEvB;EACF;AAEF,CAAC;;;;;;;;;;;;IAtJD,MAAME,KAAK,GAAGC,OAEZ;IAEF,SAASC,IAAIA,CAACC,KAAK,EAAE;MACnB,OAAOH,KAAK,CAACJ,OAAO,CAACQ,OAAO,CACzBC,GAAG,CAACC,CAAC,IAAEvB,OAAO,CAACuB,CAAC,CAAC,CAAC,CAClBC,MAAM,CAACC,EAAE,IAAEL,KAAK,GAAGK,EAAE,CAACL,KAAK,IAAIA,KAAK,GAAG,IAAI,CAAC,CAC5CE,GAAG,CAACI,CAAC,IAAEA,CAAC,CAACC,IAAI,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;IAC7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}