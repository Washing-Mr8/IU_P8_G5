{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  key: 0,\n  style: {\n    \"background-color\": \"#007bff\",\n    \"color\": \"#fff\",\n    \"padding\": \"0.3em 0.6em\",\n    \"border-radius\": \"0.25rem\"\n  }\n};\nconst _hoisted_5 = {\n  key: 2,\n  style: {\n    \"background-color\": \"#17a2b8\",\n    \"color\": \"#fff\",\n    \"padding\": \"0.3em 0.6em\",\n    \"border-radius\": \"0.25rem\"\n  }\n};\nconst _hoisted_6 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $setup.filteredData.length ? (_openBlock(), _createElementBlock(\"table\", _hoisted_1, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.columns, key => {\n    return _openBlock(), _createElementBlock(\"th\", {\n      key: key,\n      onClick: $event => $setup.sortBy(key),\n      class: _normalizeClass({\n        active: $setup.sortKey == key\n      })\n    }, [_createTextVNode(_toDisplayString($setup.capitalize(key)) + \" \", 1 /* TEXT */), $setup.sortKey == key ? (_openBlock(), _createElementBlock(\"span\", {\n      key: 0,\n      class: _normalizeClass(`arrow ${$setup.sortOrders[key] > 0 ? 'asc' : 'dsc'}`)\n    }, null, 2 /* CLASS */)) : _createCommentVNode(\"v-if\", true)], 10 /* CLASS, PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredData, entry => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: entry.id,\n      onClick: $event => _ctx.$emit('choose', entry.id)\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.columns, key => {\n      return _openBlock(), _createElementBlock(\"td\", {\n        key: `_${entry.id}_${key}`,\n        class: \"text-start\"\n      }, [key === 'name' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, _toDisplayString(entry[key]), 1 /* TEXT */)) : Array.isArray(entry[key]) ? (_openBlock(true), _createElementBlock(_Fragment, {\n        key: 1\n      }, _renderList(entry[key], (item, index) => {\n        return _openBlock(), _createElementBlock(\"span\", {\n          key: index,\n          style: {\n            \"background-color\": \"#6c757d\",\n            \"color\": \"#fff\",\n            \"padding\": \"0.3em 0.6em\",\n            \"border-radius\": \"0.25rem\"\n          }\n        }, _toDisplayString($setup.resolve(item).name), 1 /* TEXT */);\n      }), 128 /* KEYED_FRAGMENT */)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_5, _toDisplayString(entry[key]), 1 /* TEXT */))]);\n    }), 128 /* KEYED_FRAGMENT */))], 8 /* PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_6, \"(no hay nada que mostrar)\"));\n}","map":{"version":3,"names":["style","$setup","filteredData","length","_createElementBlock","_hoisted_1","_createElementVNode","_Fragment","_renderList","$props","columns","key","onClick","$event","sortBy","class","_normalizeClass","active","sortKey","capitalize","sortOrders","entry","id","_ctx","$emit","_hoisted_4","_toDisplayString","Array","isArray","item","index","resolve","name","_hoisted_5","_hoisted_6"],"sources":["C:\\hlocal\\IU_P8_G5\\IU_P8_G5\\iu2324\\vmanager\\src\\components\\VmGrid.vue"],"sourcesContent":["<script setup>\r\nimport { ref, computed } from 'vue'\r\nimport { resolve } from '../model.js'\r\n\r\n// basado en https://vuejs.org/examples/#grid\r\n\r\nconst props = defineProps({\r\n  data: Array,\r\n  columns: Array,\r\n  filterKey: String\r\n})\r\ndefineEmits(['choose'])\r\n\r\nconst sortKey = ref('')\r\nconst sortOrders = ref(\r\n  props.columns.reduce((o, key) => ((o[key] = 1), o), {})\r\n)\r\n\r\nconst filteredData = computed(() => {\r\n  let { data, filterKey } = props\r\n  if (filterKey) {\r\n    filterKey = filterKey.toLowerCase()\r\n    data = data.filter((row) => {\r\n      return Object.keys(row).some((key) => {\r\n        return String(row[key]).toLowerCase().indexOf(filterKey) > -1\r\n      })\r\n    })\r\n  }\r\n  const key = sortKey.value\r\n  if (key) {\r\n    const order = sortOrders.value[key]\r\n    data = data.slice().sort((a, b) => {\r\n      a = a[key]\r\n      b = b[key]\r\n      return (a === b ? 0 : a > b ? 1 : -1) * order\r\n    })\r\n  }\r\n  return data\r\n})\r\n\r\nfunction sortBy(key) {\r\n  sortKey.value = key\r\n  sortOrders.value[key] *= -1\r\n}\r\n\r\nfunction capitalize(str) {\r\n  return str.charAt(0).toUpperCase() + str.slice(1)\r\n}\r\n</script>\r\n\r\n<template>\r\n  <table v-if=\"filteredData.length\">\r\n    <thead>\r\n      <tr>\r\n        <th v-for=\"key in columns\" :key=\"key\"\r\n          @click=\"sortBy(key)\"\r\n          :class=\"{ active: sortKey == key }\">\r\n          {{ capitalize(key) }}\r\n          <span v-if=\"sortKey==key\" :class=\"`arrow ${sortOrders[key] > 0 ? 'asc' : 'dsc'}`\">\r\n          </span>\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr v-for=\"entry in filteredData\" :key=\"entry.id\" \r\n        @click=\"$emit('choose', entry.id)\">\r\n\r\n        <td v-for=\"key in columns\" :key=\"`_${entry.id}_${key}`\" class=\"text-start\">\r\n  <template v-if=\"key === 'name'\">\r\n    <span style=\"background-color: #007bff; color: #fff; padding: 0.3em 0.6em; border-radius: 0.25rem;\">{{ entry[key] }}</span>\r\n  </template>\r\n  <template v-else-if=\"Array.isArray(entry[key])\">\r\n    <span v-for=\"(item, index) in entry[key]\" :key=\"index\" style=\"background-color: #6c757d; color: #fff; padding: 0.3em 0.6em; border-radius: 0.25rem;\">\r\n      {{ resolve(item).name }}\r\n    </span>\r\n  </template>\r\n  <template v-else>\r\n    <span style=\"background-color: #17a2b8; color: #fff; padding: 0.3em 0.6em; border-radius: 0.25rem;\">{{ entry[key] }}</span>\r\n  </template>\r\n</td>\r\n\r\n\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <p v-else>(no hay nada que mostrar)</p>\r\n</template>\r\n\r\n<style>\r\n.arrow.asc::after {\r\n  content: \"↓\"\r\n}\r\n.arrow.dsc::after {\r\n  content: \"↑\"\r\n}\r\nspan.name {\r\n  font-weight: 1000;\r\n}\r\ntable {\r\n  margin-top: 10px;\r\n\r\n}\r\nthead>tr {\r\n  border-bottom: 1px solid gray;\r\n  color: rgb(104, 103, 103);\r\n}\r\n</style>"],"mappings":";;;;;;;;EAqEUA,KAA6F,EAA7F;IAAA;IAAA;IAAA;IAAA;EAAA;;;;EAQAA,KAA6F,EAA7F;IAAA;IAAA;IAAA;IAAA;EAAA;;;;;;SA1BKC,MAAA,CAAAC,YAAY,CAACC,MAAM,I,cAAhCC,mBAAA,CAiCQ,SAAAC,UAAA,GAhCNC,mBAAA,CAUQ,gBATNA,mBAAA,CAQK,c,kBAPHF,mBAAA,CAMKG,SAAA,QAAAC,WAAA,CANaC,MAAA,CAAAC,OAAO,EAAdC,GAAG;yBAAdP,mBAAA,CAMK;MANuBO,GAAG,EAAEA,GAAG;MACjCC,OAAK,EAAAC,MAAA,IAAEZ,MAAA,CAAAa,MAAM,CAACH,GAAG;MACjBI,KAAK,EAAAC,eAAA;QAAAC,MAAA,EAAYhB,MAAA,CAAAiB,OAAO,IAAIP;MAAG;0CAC7BV,MAAA,CAAAkB,UAAU,CAACR,GAAG,KAAI,GACrB,iBAAYV,MAAA,CAAAiB,OAAO,IAAEP,GAAG,I,cAAxBP,mBAAA,CACO;;MADoBW,KAAK,EAAAC,eAAA,UAAWf,MAAA,CAAAmB,UAAU,CAACT,GAAG;;sCAK/DL,mBAAA,CAoBQ,iB,kBAnBNF,mBAAA,CAkBKG,SAAA,QAAAC,WAAA,CAlBeP,MAAA,CAAAC,YAAY,EAArBmB,KAAK;yBAAhBjB,mBAAA,CAkBK;MAlB8BO,GAAG,EAAEU,KAAK,CAACC,EAAE;MAC7CV,OAAK,EAAAC,MAAA,IAAEU,IAAA,CAAAC,KAAK,WAAWH,KAAK,CAACC,EAAE;2BAEhClB,mBAAA,CAYHG,SAAA,QAAAC,WAAA,CAZqBC,MAAA,CAAAC,OAAO,EAAdC,GAAG;2BAAdP,mBAAA,CAYH;QAZ+BO,GAAG,MAAMU,KAAK,CAACC,EAAE,IAAIX,GAAG;QAAII,KAAK,EAAC;UACpDJ,GAAG,e,cACjBP,mBAAA,CAA2H,QAA3HqB,UAA2H,EAAAC,gBAAA,CAApBL,KAAK,CAACV,GAAG,qBAE7FgB,KAAK,CAACC,OAAO,CAACP,KAAK,CAACV,GAAG,M,kBAC1CP,mBAAA,CAEOG,SAAA;QAAAI,GAAA;MAAA,GAAAH,WAAA,CAFuBa,KAAK,CAACV,GAAG,IAAzBkB,IAAI,EAAEC,KAAK;6BAAzB1B,mBAAA,CAEO;UAFoCO,GAAG,EAAEmB,KAAK;UAAE9B,KAA6F,EAA7F;YAAA;YAAA;YAAA;YAAA;UAAA;4BAClDC,MAAA,CAAA8B,OAAO,CAACF,IAAI,EAAEG,IAAI;sDAIvB5B,mBAAA,CAA2H,QAA3H6B,UAA2H,EAAAP,gBAAA,CAApBL,KAAK,CAACV,GAAG,mB;;uDAQlHP,mBAAA,CAAuC,KAAA8B,UAAA,EAA7B,2BAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}