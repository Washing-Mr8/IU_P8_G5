{"ast":null,"code":"import VModal from './VModal.vue';\nimport TextBox from './TextBox.vue';\nimport MemberBox from './MemberBox.vue';\nimport * as M from '../model.js';\nimport { ref } from 'vue';\nexport default {\n  __name: 'GroupAddOrEditModal',\n  props: {\n    group: Object,\n    isAdd: Boolean // otherwise, editing existing instead of adding\n  },\n\n  emits: ['add', 'edit'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    const emit = __emit;\n    const props = __props;\n    let modalRef = ref(null);\n    function setGroup() {\n      const group = props.group;\n      const form = document.getElementById(\"editOrAddGroup\");\n      const valueFor = name => {\n        const input = form.querySelector(`input[name=${name}]`);\n        if (!input) console.log(\"ERROR: no input for name\", name, \"in\", form);\n        return input.value;\n      };\n      console.log(\"saving group...\", group, form);\n\n      // comprueba validez de todos los campos, y sobreescribe resultado\n      if (!form.checkValidity()) {\n        // fuerza a que se muestren los errores simulando un envío\n        // (pero como hay errores, no se va a enviar nada :-)\n        form.querySelector(\"button[type=submit]\").click();\n        return;\n      }\n\n      // todo válido: lanza evento a padre, y cierra modal\n      emit(props.isAdd ? 'add' : 'edit', new M.Group(group.id, valueFor(\"g-name\"), JSON.parse(valueFor(\"g-members\"))));\n      modalRef.value.hide();\n    }\n\n    // para que el padre pueda llamar a show (hide no debería hacer falta)\n    function show() {\n      modalRef.value.show();\n    }\n    __expose({\n      show\n    });\n    const __returned__ = {\n      emit,\n      props,\n      get modalRef() {\n        return modalRef;\n      },\n      set modalRef(v) {\n        modalRef = v;\n      },\n      setGroup,\n      show,\n      VModal,\n      TextBox,\n      MemberBox,\n      get M() {\n        return M;\n      },\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["VModal","TextBox","MemberBox","M","ref","emit","__emit","props","__props","modalRef","setGroup","group","form","document","getElementById","valueFor","name","input","querySelector","console","log","value","checkValidity","click","isAdd","Group","id","JSON","parse","hide","show","__expose"],"sources":["C:/hlocal/IU_P8_G5/iu2324/vmanager/src/components/GroupAddOrEditModal.vue"],"sourcesContent":["<script setup>\r\nimport VModal from './VModal.vue'\r\nimport TextBox from './TextBox.vue'\r\nimport MemberBox from './MemberBox.vue'\r\n\r\nimport * as M from '../model.js'\r\nimport { ref } from 'vue'\r\n\r\nconst emit = defineEmits(['add', 'edit'])\r\n\r\nconst props = defineProps({\r\n  group: Object,\r\n  isAdd: Boolean, // otherwise, editing existing instead of adding\r\n})\r\n\r\nlet modalRef = ref(null);\r\n\r\nfunction setGroup() {\r\n  const group = props.group;\r\n  const form = document.getElementById(\"editOrAddGroup\")\r\n  const valueFor = (name) => {\r\n    const input = form.querySelector(`input[name=${name}]`)\r\n    if (!input) console.log(\"ERROR: no input for name\", name, \"in\", form)\r\n    return input.value\r\n  }\r\n\r\n  console.log(\"saving group...\", group, form)\r\n\r\n  // comprueba validez de todos los campos, y sobreescribe resultado\r\n  if ( ! form.checkValidity()) {\r\n    // fuerza a que se muestren los errores simulando un envío\r\n    // (pero como hay errores, no se va a enviar nada :-)\r\n    form.querySelector(\"button[type=submit]\").click()\r\n    return; \r\n  }    \r\n\r\n  // todo válido: lanza evento a padre, y cierra modal\r\n  emit(props.isAdd ? 'add' : 'edit', new M.Group(group.id,\r\n    valueFor(\"g-name\"), JSON.parse(valueFor(\"g-members\"))\r\n  ))\r\n  modalRef.value.hide()    \r\n}\r\n\r\n// para que el padre pueda llamar a show (hide no debería hacer falta)\r\nfunction show() {\r\n  modalRef.value.show();\r\n}\r\ndefineExpose({ show });\r\n</script>\r\n\r\n<template>\r\n  <VModal ref=\"modalRef\" id=\"groupAddOrEditModal\"\r\n    :title=\"isAdd ? 'Añadiendo nuevo grupo' : `Editando grupo: ${group.name}`\" >\r\n    <template #body>\r\n      <form id=\"editOrAddGroup\" \r\n        @submit.prevent=\"e => setGroup()\">\r\n        <div class=\"container\">\r\n          <TextBox :start=\"group.name\" id=\"g-name\" label=\"nombre\" />\r\n        </div>\r\n        <div class=\"container\">\r\n          <MemberBox :start=\"group.members\" :all=\"M.getVms()\" id=\"g-members\" label=\"miembros\" />\r\n        </div>\r\n        <button type=\"submit\" class=\"invisible\">Submit</button>\r\n      </form>\r\n    </template>\r\n    <template #footer>\r\n      <button @click.prevent=\"() => setGroup()\" class=\"btn btn-primary\">\r\n        {{ isAdd ? 'Añadir este grupo' : `Confirmar cambios a ${group.name}` }}\r\n      </button>\r\n    </template>\r\n  </VModal>\r\n</template>\r\n\r\n<style scoped>\r\n</style>\r\n"],"mappings":"AACA,OAAOA,MAAM,MAAM,cAAc;AACjC,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAOC,SAAS,MAAM,iBAAiB;AAEvC,OAAO,KAAKC,CAAC,MAAM,aAAa;AAChC,SAASC,GAAG,QAAQ,KAAK;;;;;;;;;;;;;IAEzB,MAAMC,IAAI,GAAGC,MAA4B;IAEzC,MAAMC,KAAK,GAAGC,OAGZ;IAEF,IAAIC,QAAQ,GAAGL,GAAG,CAAC,IAAI,CAAC;IAExB,SAASM,QAAQA,CAAA,EAAG;MAClB,MAAMC,KAAK,GAAGJ,KAAK,CAACI,KAAK;MACzB,MAAMC,IAAI,GAAGC,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC;MACtD,MAAMC,QAAQ,GAAIC,IAAI,IAAK;QACzB,MAAMC,KAAK,GAAGL,IAAI,CAACM,aAAa,CAAE,cAAaF,IAAK,GAAE,CAAC;QACvD,IAAI,CAACC,KAAK,EAAEE,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEJ,IAAI,EAAE,IAAI,EAAEJ,IAAI,CAAC;QACrE,OAAOK,KAAK,CAACI,KAAK;MACpB,CAAC;MAEDF,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAET,KAAK,EAAEC,IAAI,CAAC;;MAE3C;MACA,IAAK,CAAEA,IAAI,CAACU,aAAa,CAAC,CAAC,EAAE;QAC3B;QACA;QACAV,IAAI,CAACM,aAAa,CAAC,qBAAqB,CAAC,CAACK,KAAK,CAAC,CAAC;QACjD;MACF;;MAEA;MACAlB,IAAI,CAACE,KAAK,CAACiB,KAAK,GAAG,KAAK,GAAG,MAAM,EAAE,IAAIrB,CAAC,CAACsB,KAAK,CAACd,KAAK,CAACe,EAAE,EACrDX,QAAQ,CAAC,QAAQ,CAAC,EAAEY,IAAI,CAACC,KAAK,CAACb,QAAQ,CAAC,WAAW,CAAC,CACtD,CAAC,CAAC;MACFN,QAAQ,CAACY,KAAK,CAACQ,IAAI,CAAC,CAAC;IACvB;;IAEA;IACA,SAASC,IAAIA,CAAA,EAAG;MACdrB,QAAQ,CAACY,KAAK,CAACS,IAAI,CAAC,CAAC;IACvB;IACAC,QAAY,CAAC;MAAED;IAAK,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}